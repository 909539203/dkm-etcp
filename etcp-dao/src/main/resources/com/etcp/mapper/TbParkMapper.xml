<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etcp.mapper.TbParkMapper" >
  <resultMap id="BaseResultMap" type="com.etcp.pojo.TbPark" >
    <id column="park_id" property="parkId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="parkGroup_id" property="parkgroupId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="batteryState" property="batterystate" jdbcType="INTEGER" />
    <result column="errorCode" property="errorcode" jdbcType="INTEGER" />
    <result column="distance" property="distance" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="ower_id" property="owerId" jdbcType="BIGINT" />
    <result column="rentStatus" property="rentstatus" jdbcType="INTEGER" />
    <result column="picUrl" property="picurl" jdbcType="VARCHAR" />
    <result column="jidu" property="jidu" jdbcType="VARCHAR" />
    <result column="weidu" property="weidu" jdbcType="VARCHAR" />
    <result column="key1" property="key1" jdbcType="VARCHAR" />
    <result column="key2" property="key2" jdbcType="VARCHAR" />
    <result column="key3" property="key3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    park_id, city_id, parkGroup_id, price, status, batteryState, errorCode, distance, 
    user_id, ower_id, rentStatus, picUrl, jidu, weidu, key1, key2, key3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.etcp.pojo.TbParkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_park
    where park_id = #{parkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_park
    where park_id = #{parkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.etcp.pojo.TbParkExample" >
    delete from tb_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.etcp.pojo.TbPark" >
    insert into tb_park (park_id, city_id, parkGroup_id, 
      price, status, batteryState, 
      errorCode, distance, user_id, 
      ower_id, rentStatus, picUrl, 
      jidu, weidu, key1, 
      key2, key3)
    values (#{parkId,jdbcType=BIGINT}, #{cityId,jdbcType=BIGINT}, #{parkgroupId,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{batterystate,jdbcType=INTEGER}, 
      #{errorcode,jdbcType=INTEGER}, #{distance,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      #{owerId,jdbcType=BIGINT}, #{rentstatus,jdbcType=INTEGER}, #{picurl,jdbcType=VARCHAR}, 
      #{jidu,jdbcType=VARCHAR}, #{weidu,jdbcType=VARCHAR}, #{key1,jdbcType=VARCHAR}, 
      #{key2,jdbcType=VARCHAR}, #{key3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.etcp.pojo.TbPark" >
    insert into tb_park
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parkId != null" >
        park_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="parkgroupId != null" >
        parkGroup_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="batterystate != null" >
        batteryState,
      </if>
      <if test="errorcode != null" >
        errorCode,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="owerId != null" >
        ower_id,
      </if>
      <if test="rentstatus != null" >
        rentStatus,
      </if>
      <if test="picurl != null" >
        picUrl,
      </if>
      <if test="jidu != null" >
        jidu,
      </if>
      <if test="weidu != null" >
        weidu,
      </if>
      <if test="key1 != null" >
        key1,
      </if>
      <if test="key2 != null" >
        key2,
      </if>
      <if test="key3 != null" >
        key3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parkId != null" >
        #{parkId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="parkgroupId != null" >
        #{parkgroupId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="batterystate != null" >
        #{batterystate,jdbcType=INTEGER},
      </if>
      <if test="errorcode != null" >
        #{errorcode,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="owerId != null" >
        #{owerId,jdbcType=BIGINT},
      </if>
      <if test="rentstatus != null" >
        #{rentstatus,jdbcType=INTEGER},
      </if>
      <if test="picurl != null" >
        #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="jidu != null" >
        #{jidu,jdbcType=VARCHAR},
      </if>
      <if test="weidu != null" >
        #{weidu,jdbcType=VARCHAR},
      </if>
      <if test="key1 != null" >
        #{key1,jdbcType=VARCHAR},
      </if>
      <if test="key2 != null" >
        #{key2,jdbcType=VARCHAR},
      </if>
      <if test="key3 != null" >
        #{key3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.etcp.pojo.TbParkExample" resultType="java.lang.Integer" >
    select count(*) from tb_park
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_park
    <set >
      <if test="record.parkId != null" >
        park_id = #{record.parkId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.parkgroupId != null" >
        parkGroup_id = #{record.parkgroupId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.batterystate != null" >
        batteryState = #{record.batterystate,jdbcType=INTEGER},
      </if>
      <if test="record.errorcode != null" >
        errorCode = #{record.errorcode,jdbcType=INTEGER},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.owerId != null" >
        ower_id = #{record.owerId,jdbcType=BIGINT},
      </if>
      <if test="record.rentstatus != null" >
        rentStatus = #{record.rentstatus,jdbcType=INTEGER},
      </if>
      <if test="record.picurl != null" >
        picUrl = #{record.picurl,jdbcType=VARCHAR},
      </if>
      <if test="record.jidu != null" >
        jidu = #{record.jidu,jdbcType=VARCHAR},
      </if>
      <if test="record.weidu != null" >
        weidu = #{record.weidu,jdbcType=VARCHAR},
      </if>
      <if test="record.key1 != null" >
        key1 = #{record.key1,jdbcType=VARCHAR},
      </if>
      <if test="record.key2 != null" >
        key2 = #{record.key2,jdbcType=VARCHAR},
      </if>
      <if test="record.key3 != null" >
        key3 = #{record.key3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_park
    set park_id = #{record.parkId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      parkGroup_id = #{record.parkgroupId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      batteryState = #{record.batterystate,jdbcType=INTEGER},
      errorCode = #{record.errorcode,jdbcType=INTEGER},
      distance = #{record.distance,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      ower_id = #{record.owerId,jdbcType=BIGINT},
      rentStatus = #{record.rentstatus,jdbcType=INTEGER},
      picUrl = #{record.picurl,jdbcType=VARCHAR},
      jidu = #{record.jidu,jdbcType=VARCHAR},
      weidu = #{record.weidu,jdbcType=VARCHAR},
      key1 = #{record.key1,jdbcType=VARCHAR},
      key2 = #{record.key2,jdbcType=VARCHAR},
      key3 = #{record.key3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.etcp.pojo.TbPark" >
    update tb_park
    <set >
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="parkgroupId != null" >
        parkGroup_id = #{parkgroupId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="batterystate != null" >
        batteryState = #{batterystate,jdbcType=INTEGER},
      </if>
      <if test="errorcode != null" >
        errorCode = #{errorcode,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        distance = #{distance,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="owerId != null" >
        ower_id = #{owerId,jdbcType=BIGINT},
      </if>
      <if test="rentstatus != null" >
        rentStatus = #{rentstatus,jdbcType=INTEGER},
      </if>
      <if test="picurl != null" >
        picUrl = #{picurl,jdbcType=VARCHAR},
      </if>
      <if test="jidu != null" >
        jidu = #{jidu,jdbcType=VARCHAR},
      </if>
      <if test="weidu != null" >
        weidu = #{weidu,jdbcType=VARCHAR},
      </if>
      <if test="key1 != null" >
        key1 = #{key1,jdbcType=VARCHAR},
      </if>
      <if test="key2 != null" >
        key2 = #{key2,jdbcType=VARCHAR},
      </if>
      <if test="key3 != null" >
        key3 = #{key3,jdbcType=VARCHAR},
      </if>
    </set>
    where park_id = #{parkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etcp.pojo.TbPark" >
    update tb_park
    set city_id = #{cityId,jdbcType=BIGINT},
      parkGroup_id = #{parkgroupId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      batteryState = #{batterystate,jdbcType=INTEGER},
      errorCode = #{errorcode,jdbcType=INTEGER},
      distance = #{distance,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      ower_id = #{owerId,jdbcType=BIGINT},
      rentStatus = #{rentstatus,jdbcType=INTEGER},
      picUrl = #{picurl,jdbcType=VARCHAR},
      jidu = #{jidu,jdbcType=VARCHAR},
      weidu = #{weidu,jdbcType=VARCHAR},
      key1 = #{key1,jdbcType=VARCHAR},
      key2 = #{key2,jdbcType=VARCHAR},
      key3 = #{key3,jdbcType=VARCHAR}
    where park_id = #{parkId,jdbcType=BIGINT}
  </update>
</mapper>